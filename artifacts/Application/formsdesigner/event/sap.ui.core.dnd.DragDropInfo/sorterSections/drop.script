let oDraggedControl = oEvent.getParameter("draggedControl");
let oDroppedControl = oEvent.getParameter("droppedControl");

let oDraggedContext = oDraggedControl.getBindingContext();
let oDroppedContext = oDroppedControl.getBindingContext();

if (!oDraggedContext && !oDroppedContext) return;

const position = oEvent.getParameter("dropPosition");

let oDraggedData = oDraggedContext.getObject();
let oDroppedData = oDroppedContext.getObject();

let oDraggedParent;
let oDroppedParent;

if (["Form", "Table"].includes(oDraggedData.type)) {
    oDraggedParent = oDraggedData;
    oDroppedParent = controller.getParentFromId(oDroppedData.id);
} else {
    oDraggedParent = controller.getParentFromId(oDraggedData.id);

    if (["Form", "Table", "FormTitle"].includes(oDroppedData.type)) {
        oDroppedParent = oDroppedData;
    } else {
        oDroppedParent = controller.getParentFromId(oDroppedData.id);
    }
}

let indexDrag = controller.getIndexFromId(oDraggedData.id);
let indexDrop = controller.getIndexFromId(oDroppedData.id);

// Allowed in Table ?
const library = ModelData.FindFirst(controller.elementTypes, "type", controller.dragElement.type);

if (oDroppedParent.type === "Table" && !library.table) {
    sap.m.MessageToast.show("Element not allowed in parent Table");
    return ;
}

const rootType = ["Form", "Table"];

// FORM - TOP
if (rootType.includes(oDraggedData.type) && rootType.includes(oDroppedData.type)) {
    Utils.arrayMove(modeloPageDetail.oData.setup, indexDrag, indexDrop);
}

// Prevent Parents to be Dropped wrong
if (rootType.includes(oDraggedData.type) && !oDroppedData.elements) {
    return;
}

if (!rootType.includes(oDraggedData.type) && rootType.includes(oDroppedData.type)) {
    if (oDraggedParent.id === oDroppedParent.id) {
        Utils.arrayMove(oDroppedParent.elements, indexDrag, 0);
    } else {
        oDroppedParent.elements.splice(indexDrop, 0, oDraggedData);
        ModelData.Delete(oDraggedParent.elements, "id", oDraggedData.id);
    }
}

if (!rootType.includes(oDraggedData.type) && !rootType.includes(oDroppedData.type)) {
    if (oDraggedParent.id === oDroppedParent.id) {
        Utils.arrayMove(oDroppedParent.elements, indexDrag, indexDrop);
    } else {
        oDroppedParent.elements.splice(indexDrop, 0, oDraggedData);
        ModelData.Delete(oDraggedParent.elements, "id", oDraggedData.id);
    }
}

modeloPageDetail.refresh(true);
controller.selectObjectFromId(oDraggedData.id);
